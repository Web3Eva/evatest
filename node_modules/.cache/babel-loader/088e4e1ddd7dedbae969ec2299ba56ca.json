{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lahcen Laayouni\\\\Documents\\\\Eva\\\\src\\\\pages\\\\Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Settings.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const [pfps, setPfps] = useState([]);\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n  let bannerimage;\n\n  const resolveLink = url => {\n    if (!url || !url.includes(\"ipfs://\")) return url;\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  };\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const options = {\n        chain: \"polygon\",\n        address: account\n      };\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n      const images = mumbaiNFTs.result.map(e => {\n        var _JSON$parse;\n\n        return resolveLink((_JSON$parse = JSON.parse(e.metadata)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.image);\n      });\n      setPfps(images);\n    };\n\n    fetchNFTs();\n  }, [isAuthenticated, account]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n    bannerimage = URL.createObjectURL(img);\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (selectedPFP) {\n      myDetails.set(\"pfp\", selectedPFP);\n    }\n\n    if (username) {\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", bannerimage);\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"rgba(47,49,54,255)\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"rgba(47,49,54,255)\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingoptions\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginLeft: 30,\n            marginBottom: 10\n          },\n          children: \"Light Theme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(Switch, { ...label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 100\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Pick a profile picture (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"gXLaLC2r5zMK4eNciwbwFGjYj30=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["C:/Users/Lahcen Laayouni/Documents/Eva/src/pages/Settings.js"],"names":["React","Link","useState","useRef","useEffect","Input","defaultImgs","useMoralis","useMoralisWeb3Api","Switch","Settings","pfps","setPfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","Web3Api","bannerimage","resolveLink","url","includes","replace","fetchNFTs","options","chain","address","mumbaiNFTs","getNFTs","images","result","map","e","JSON","parse","metadata","image","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","save","window","location","reload","value","marginLeft","marginBottom","label","i","display"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Settings.css\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { Input } from \"web3uikit\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { useMoralis, useMoralisWeb3Api } from \"react-moralis\";\nimport { Switch } from 'react-router-dom'\n\nconst Settings = () => {\n\n  const [pfps, setPfps] = useState([]);\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const { Moralis, isAuthenticated, account } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n  let bannerimage;\n\n\n  const resolveLink = (url) => {\n    if (!url || !url.includes(\"ipfs://\")) return url;\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  };\n\n  useEffect(() => {\n    \n    const fetchNFTs = async () => {\n      const options = {\n        chain: \"polygon\",\n        address: account\n      }\n\n      const mumbaiNFTs = await Web3Api.account.getNFTs(options);\n      \n      const images = mumbaiNFTs.result.map(\n        (e) => resolveLink(JSON.parse(e.metadata)?.image)\n      );\n      \n      \n        setPfps(images);\n      \n      \n    }\n\n    fetchNFTs();\n\n  },[isAuthenticated, account])\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = (event) => {\n    \n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n    bannerimage = URL.createObjectURL(img)\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio){\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (selectedPFP){\n      myDetails.set(\"pfp\", selectedPFP);\n    }\n\n    if (username){\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", bannerimage);\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  }\n\n  return (\n    <>\n      <div className=\"pageIdentify\">Settings</div>\n      <div className=\"settingsPage\">\n        <Input\n          label=\"Name\"\n          name=\"NameChange\"\n          width=\"100%\"\n          labelBgColor=\"rgba(47,49,54,255)\"\n          onChange={(e)=> setUsername(e.target.value)}\n        />\n\n        <Input\n          label=\"Bio\"\n          name=\"bioChange\"\n          width=\"100%\"\n          labelBgColor=\"rgba(47,49,54,255)\"\n          onChange={(e)=> setBio(e.target.value)}\n        />\n        <div className=\"settingoptions\"><p style={{marginLeft:30, marginBottom:10}}>Light Theme</p><Switch {...label} /></div>\n        <div className=\"pfp\">\n          Pick a profile picture (Your NFTs)\n\n          <div className=\"pfpOptions\">\n            {pfps.map((e,i) => {\n\n              return(\n                <>\n                <img\n                src={e}\n                className={\n                  selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"\n                }\n                onClick={() => {setSelectedPFP(pfps[i]);}}\n                ></img>\n                </>\n              )\n            })}\n          </div>\n        </div>\n\n        <div className=\"pfp\">\n          Profile Banner\n          <div className=\"pfpOptions\">\n            <img\n              src={selectedFile}\n              onClick={onBannerClick}\n              className=\"banner\"\n            ></img>\n            <input\n              type=\"file\"\n              name=\"file\"\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: \"none\" }}\n            />\n          </div>\n        </div>\n        <div className=\"save\" onClick={() => saveEdits()}>\n          Save\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Settings;\n\n"]},"metadata":{},"sourceType":"module"}