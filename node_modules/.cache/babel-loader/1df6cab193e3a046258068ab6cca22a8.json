{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lahcen Laayouni\\\\Documents\\\\Twitter-Starter\\\\src\\\\components\\\\TweetInFeed.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport './TweetInFeed.css';\nimport golf from \"../images/golf.png\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { Icon } from \"web3uikit\";\nimport { useMoralis } from \"react-moralis\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TweetInFeed = _ref => {\n  _s();\n\n  let {\n    profile\n  } = _ref;\n  const [MessageArr, setMessageArr] = useState();\n  const {\n    Moralis,\n    account\n  } = useMoralis();\n  useEffect(() => {\n    async function getMessages() {\n      try {\n        const Messages = Moralis.Object.extend(\"Messages\");\n        const query = new Moralis.Query(Messages);\n\n        if (profile) {\n          query.equalTo(\"senderAcc\", account);\n        }\n\n        const results = await query.find();\n        setMessageArr(results);\n        console.log(results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n\n    getMessages();\n  }, [profile]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: MessageArr === null || MessageArr === void 0 ? void 0 : MessageArr.map(e => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedTweet\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: e.attributes.senerPfp ? e.attributes.senderPfp : defaultImgs[0],\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"completeTweet\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"who\",\n              children: [e.attributes.senderUsername.slice(0, 6), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accWhen\",\n                children: `${e.attributes.senderAcc.slice(0, 4)}...${e.attributes.senderAcc.slice(38)} Â· \n                        ${e.attributes.createdAt.toLocaleString('en-us', {\n                  month: 'short'\n                })}  \n                        ${e.attributes.createdAt.toLocaleString('en-us', {\n                  day: 'numeric'\n                })}\n                        `\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetContent\",\n              children: [e.attributes.messageTxt, e.attributes.messageImg && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: e.attributes.messageImg,\n                className: \"tweetImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interactions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"messageCircle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"star\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), \"12\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"interactionNums\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#3f3f3f\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false);\n    }).reverse()\n  }, void 0, false);\n};\n\n_s(TweetInFeed, \"rI+ix5Gd+e5NAj5GSOgD42whilw=\", false, function () {\n  return [useMoralis];\n});\n\n_c = TweetInFeed;\nexport default TweetInFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TweetInFeed\");","map":{"version":3,"sources":["C:/Users/Lahcen Laayouni/Documents/Twitter-Starter/src/components/TweetInFeed.js"],"names":["React","golf","defaultImgs","Icon","useMoralis","useEffect","useState","TweetInFeed","profile","MessageArr","setMessageArr","Moralis","account","getMessages","Messages","Object","extend","query","Query","equalTo","results","find","console","log","error","map","e","attributes","senerPfp","senderPfp","senderUsername","slice","senderAcc","createdAt","toLocaleString","month","day","messageTxt","messageImg","reverse"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './TweetInFeed.css';\nimport golf from \"../images/golf.png\"\nimport {defaultImgs} from \"../defaultimgs\"\nimport {Icon} from \"web3uikit\"\nimport { useMoralis } from \"react-moralis\";\nimport { useEffect, useState } from \"react\";\n\n\nconst TweetInFeed = ({profile}) => {\n  \n  const [MessageArr, setMessageArr] = useState();\n  const {Moralis, account} = useMoralis();\n\n  useEffect(() => {\n    async function getMessages() {\n      try {\n        const Messages = Moralis.Object.extend(\"Messages\");\n        const query = new Moralis.Query(Messages);\n        if (profile) {\n          \n          query.equalTo(\"senderAcc\", account);\n        }\n        const results = await query.find();\n        \n\n        setMessageArr(results);\n        console.log(results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    \n    getMessages();\n    \n  }, [profile]);\n\n  return (\n    <>\n    {MessageArr?.map((e) => {\n        return (\n          <>\n            <div className=\"feedTweet\">\n              <img src={e.attributes.senerPfp ? e.attributes.senderPfp : defaultImgs[0]} className=\"profilePic\"></img>\n              <div className=\"completeTweet\">\n                <div className=\"who\">\n                {e.attributes.senderUsername.slice(0, 6)}\n                  <div className=\"accWhen\">{\n                        `${e.attributes.senderAcc.slice(0, 4)}...${e.attributes.senderAcc.slice(38)} Â· \n                        ${e.attributes.createdAt.toLocaleString('en-us', { month: 'short' })}  \n                        ${e.attributes.createdAt.toLocaleString('en-us', { day: 'numeric' })}\n                        `  \n                      }\n                      </div>\n                </div>\n                <div className=\"tweetContent\">\n                {e.attributes.messageTxt}\n                {e.attributes.messageImg && (\n                        <img\n                          src={e.attributes.messageImg}\n                          className=\"tweetImg\"\n                        ></img>\n                      )}\n                </div>\n                <div className=\"interactions\">\n                  <div className=\"interactionNums\">\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"messageCircle\" />\n                  </div>\n                  <div className=\"interactionNums\">\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"star\" />\n                    12\n                  </div>\n                  <div className=\"interactionNums\">\n                    <Icon fill=\"#3f3f3f\" size={20} svg=\"matic\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        );\n      }).reverse()}\n    \n\n\n    </>\n  );\n};\n\nexport default TweetInFeed;\n\n"]},"metadata":{},"sourceType":"module"}