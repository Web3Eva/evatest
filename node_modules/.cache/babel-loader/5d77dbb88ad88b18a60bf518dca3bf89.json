{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lahcen Laayouni\\\\Documents\\\\Eva\\\\src\\\\pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./Home.css\";\nimport { defaultImgs } from \"../defaultimgs\";\nimport { TextArea, Icon } from \"web3uikit\";\nimport { useState, useRef } from \"react\";\nimport MessageInFeed from \"../components/MessageInFeed\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\nimport emojiimg from \"../images/emoji.png\";\nimport Picker from 'emoji-picker-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    Moralis\n  } = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [message, setMessage] = useState();\n  const [inputStr, setInputStr] = useState('');\n  const [showPicker, setShowPicker] = useState(false);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setInputStr(prevInput => prevInput + emojiObject.emoji);\n    setShowPicker(false);\n  };\n\n  async function maticSend() {\n    if (!message) return;\n    let img;\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    } else {\n      img = \"No Img\";\n    }\n\n    let options = {\n      contractAddress: \"0xee8530268768C1f20A42b4B43e38e2469b651d1D\",\n      functionName: \"sendMessage\",\n      abi: [{\n        \"inputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n      }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n          \"indexed\": false,\n          \"internalType\": \"address\",\n          \"name\": \"sender\",\n          \"type\": \"address\"\n        }, {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"id\",\n          \"type\": \"uint256\"\n        }, {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"MessageTxt\",\n          \"type\": \"string\"\n        }, {\n          \"indexed\": false,\n          \"internalType\": \"string\",\n          \"name\": \"MessageImage\",\n          \"type\": \"string\"\n        }],\n        \"name\": \"messageSent\",\n        \"type\": \"event\"\n      }, {\n        \"inputs\": [{\n          \"internalType\": \"string\",\n          \"name\": \"MessageTxt\",\n          \"type\": \"string\"\n        }, {\n          \"internalType\": \"string\",\n          \"name\": \"MessageImage\",\n          \"type\": \"string\"\n        }],\n        \"name\": \"sendMessage\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      }],\n      params: {\n        MessageTxt: message,\n        MessageImage: img\n      },\n      msgValue: Moralis.Units.ETH(1)\n    };\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        saveMessage();\n      },\n      onError: error => {\n        alert(error.data.message);\n      }\n    });\n  }\n\n  async function saveMessage() {\n    if (!message) return;\n    setInputStr(message);\n    const Messages = Moralis.Object.extend(\"Messages\");\n    const newMessage = new Messages();\n    newMessage.set(\"messageTxt\", message);\n    newMessage.set(\"senderPfp\", user.attributes.pfp);\n    newMessage.set(\"senderAcc\", user.attributes.ethAddress);\n    newMessage.set(\"senderUsername\", user.attributes.username);\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      newMessage.set(\"messageImg\", file.ipfs());\n    }\n\n    await newMessage.save();\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileEva\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.attributes.pfp ? user.attributes.pfp : defaultImgs[0],\n          className: \"profilePic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"evaBox\",\n          children: [/*#__PURE__*/_jsxDEV(TextArea, {\n            label: \"\",\n            id: \"tweetTxtArea\",\n            name: \"tweetTxtArea\",\n            value: inputStr,\n            onChange: e => setMessage(e.target.value),\n            placeholder: \"Start a message!\",\n            type: \"text\",\n            width: \"95%\",\n            className: \"textarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            className: \"evaImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgOrEva\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"imgDiv\",\n              onClick: onImageClick,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                ref: inputFile,\n                onChange: changeHandler,\n                style: {\n                  display: \"none\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Icon, {\n                fill: \"#1DA1F2\",\n                size: 20,\n                svg: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"emojii\",\n              src: emojiimg,\n              onClick: () => setShowPicker(val => !val)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 7\n            }, this), showPicker && /*#__PURE__*/_jsxDEV(Picker, {\n              pickerStyle: {\n                width: '100%'\n              },\n              onEmojiClick: onEmojiClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 107\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"evaOptions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eva\",\n                onClick: saveMessage,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"eva\",\n                onClick: maticSend,\n                style: {\n                  backgroundColor: \"#8247e5\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  fill: \"#ffffff\",\n                  size: 20,\n                  svg: \"matic\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 96\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageInFeed, {\n        profile: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"vCZNPhMzEkAfQBEgni3P0jXQVoI=\", false, function () {\n  return [useMoralis, useWeb3ExecuteFunction];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Lahcen Laayouni/Documents/Eva/src/pages/Home.js"],"names":["React","defaultImgs","TextArea","Icon","useState","useRef","MessageInFeed","useMoralis","useWeb3ExecuteFunction","emojiimg","Picker","Home","Moralis","user","User","current","contractProcessor","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","message","setMessage","inputStr","setInputStr","showPicker","setShowPicker","onEmojiClick","event","emojiObject","prevInput","emoji","maticSend","img","data","file","File","name","saveIPFS","ipfs","options","contractAddress","functionName","abi","params","MessageTxt","MessageImage","msgValue","Units","ETH","fetch","onSuccess","saveMessage","onError","error","alert","Messages","Object","extend","newMessage","set","attributes","pfp","ethAddress","username","save","window","location","reload","onImageClick","click","changeHandler","target","files","URL","createObjectURL","e","value","display","val","width","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Home.css\";\nimport {defaultImgs} from \"../defaultimgs\"\nimport {TextArea, Icon} from \"web3uikit\";\nimport {useState, useRef} from \"react\";\nimport MessageInFeed from \"../components/MessageInFeed\"\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\nimport emojiimg from \"../images/emoji.png\";\nimport Picker from 'emoji-picker-react';\n\n\nconst Home = () => {\n\n  const { Moralis } = useMoralis();\n  const user = Moralis.User.current();\n  const contractProcessor = useWeb3ExecuteFunction();\n\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState();\n  const [theFile, setTheFile] = useState();\n  const [message, setMessage] = useState();\n  const [inputStr, setInputStr] = useState('');\n  const [showPicker, setShowPicker] = useState(false);\n  \n  const onEmojiClick = (event, emojiObject) => {\n    setInputStr(prevInput => prevInput + emojiObject.emoji);\n    setShowPicker(false);\n  };\n \n\n\n\n async function maticSend() {\n   if(!message) return;\n\n   let img;\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      img = file.ipfs();\n    }else{\n      img = \"No Img\"\n    }\n\n    let options = {\n      contractAddress: \"0xee8530268768C1f20A42b4B43e38e2469b651d1D\",\n      functionName: \"sendMessage\",\n      abi:[{\n        \"inputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n      },\n      {\n        \"anonymous\": false,\n        \"inputs\": [\n          {\n            \"indexed\": false,\n            \"internalType\": \"address\",\n            \"name\": \"sender\",\n            \"type\": \"address\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"uint256\",\n            \"name\": \"id\",\n            \"type\": \"uint256\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"string\",\n            \"name\": \"MessageTxt\",\n            \"type\": \"string\"\n          },\n          {\n            \"indexed\": false,\n            \"internalType\": \"string\",\n            \"name\": \"MessageImage\",\n            \"type\": \"string\"\n          }\n        ],\n        \"name\": \"messageSent\",\n        \"type\": \"event\"\n      },\n      {\n        \"inputs\": [\n          {\n            \"internalType\": \"string\",\n            \"name\": \"MessageTxt\",\n            \"type\": \"string\"\n          },\n          {\n            \"internalType\": \"string\",\n            \"name\": \"MessageImage\",\n            \"type\": \"string\"\n          }\n        ],\n        \"name\": \"sendMessage\",\n        \"outputs\": [],\n        \"stateMutability\": \"payable\",\n        \"type\": \"function\"\n      }], \n      params: {\n        MessageTxt:message,\n        MessageImage: img,\n      },\n      msgValue: Moralis.Units.ETH(1),\n    }\n\n    await contractProcessor.fetch({\n      params: options,\n      onSuccess: () => {\n        saveMessage();\n      },\n      onError: (error) => {\n        alert(error.data.message)\n      }\n    });\n }\n\n\n\n  async function saveMessage() {\n    if (!message) return;\n    setInputStr(message)\n    const Messages = Moralis.Object.extend(\"Messages\");\n    const newMessage = new Messages;\n\n    newMessage.set(\"messageTxt\", message)\n    newMessage.set(\"senderPfp\", user.attributes.pfp);\n    newMessage.set(\"senderAcc\", user.attributes.ethAddress);\n    newMessage.set(\"senderUsername\", user.attributes.username);\n\n    if(theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      newMessage.set(\"messageImg\", file.ipfs());\n    }\n\n    await newMessage.save();\n    window.location.reload();\n  }\n\n  const onImageClick = () => {\n    inputFile.current.click();\n  };\n\n  \n\n  const changeHandler = (event) =>{\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img))\n  }\n\n  return (\n    <>\n    <div className=\"pageIdentify\">Home</div>\n      <div className=\"mainContent\">\n        <div className=\"profileEva\">\n          <img src={user.attributes.pfp ? user.attributes.pfp : defaultImgs[0]} className=\"profilePic\"></img>\n          <div className=\"evaBox\">\n            <TextArea  label=\"\" id=\"tweetTxtArea\" name=\"tweetTxtArea\" value={inputStr} onChange={(e) => setMessage(e.target.value)} placeholder=\"Start a message!\" type=\"text\" width=\"95%\" className=\"textarea\"></TextArea>\n              {selectedFile && (\n                <img src={selectedFile} className=\"evaImg\"></img>\n              )}\n            <div className=\"imgOrEva\">\n              <div className=\"imgDiv\" onClick={onImageClick}>\n                <input\n                  type=\"file\"\n                  name = \"file\"\n                  ref={inputFile}\n                  onChange={changeHandler}\n                  style={{display:\"none\"}}\n                \n                />\n                <Icon fill=\"#1DA1F2\" size={20} svg=\"image\"></Icon>\n    \n              </div><div>\n      \n      \n    </div>\n      <img className=\"emojii\"  src={emojiimg}  onClick={() => setShowPicker(val => !val)}/>{showPicker && <Picker\n          pickerStyle={{ width: '100%' }}\n          onEmojiClick={onEmojiClick} />}\n\n              \n              <div className=\"evaOptions\">\n                  <div className=\"eva\" onClick={saveMessage}>Send</div>\n                  <div className=\"eva\" onClick={maticSend} style={{backgroundColor:\"#8247e5\"}}><Icon fill=\"#ffffff\" size={20} svg=\"matic\"></Icon></div>\n\n              </div>\n            </div>\n          </div>\n          \n        </div>\n        <MessageInFeed profile={true}/>\n\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}